{"ast":null,"code":"export const PROJECTS = [{\n  \"name\": \"Flower Classification WebApp\",\n  \"link\": \"https://flower-classifier-dad75.firebaseapp.com\",\n  \"pic\": require(\"../resources/projects/floclassifier.jpg\"),\n  \"description\": [\"• Built an end-to-end deep learning based web application to identify the type of a flower given its image\", \"• Used fast-ai library to train the model using transfer learning from ResNet-34.\", \"• Created an API using Flask and deployed it on Render.com. Built a React-based frontend and deployed it on Firebase.com\"]\n}, {\n  \"name\": \"Movie Genre Identifier\",\n  \"link\": \"https://towardsdatascience.com/building-a-movie-genre-classifier-using-a-dataset-created-using-google-images-4752f75a1d79\",\n  \"pic\": require(\"../resources/projects/movies.jpg\"),\n  \"description\": [\"• Generated a custom dataset using Google images\", \"• Trained a model to identify the genre (horror, romance, superhero) of a movie by looking at its poster with an accuracy of 80%.\", \"• Performed various experiments on the model to improve accuracy and made observations about them.\"]\n}, {\n  \"name\": \"Box Office Revenue Predictor\",\n  \"link\": \"https://github.com/ShreejayaB/TMDB-Box-Office-Predictions\",\n  \"pic\": require(\"../resources/projects/tmdb.jpg\"),\n  \"description\": [\"• Compared various regression algorithms like Naive Bayes Regressor, Random Forests, Linear Regression etc. using scikit-learn\", \"• Fine tuned the best regressor (Random Forests) using randomized search\", \"• Predicted box office revenue with an R square score of 0.85\"]\n}, {\n  \"name\": \"Predicting Student grades - Statistical Linear Regression\",\n  \"link\": \"https://github.com/aakanksha-ns/linear-regression-student-grades-project\",\n  \"pic\": require(\"../resources/projects/grades.jpg\"),\n  \"description\": [\"• Predicted Student grades based on social and economic factors\", \"• Employed statistical techniques and the statsmodels Python package for featue selection, model diagnosis, and residual analysis\"]\n}, {\n  \"name\": \"Piper - Music Genre Identifier\",\n  \"link\": require(\"../projects/docs/piper.pdf\"),\n  \"pic\": require(\"../resources/projects/piper.png\"),\n  \"description\": [\"• Developed an android application that can recognize the genre  and identify the lyrics of a song played externally or chosen from the device.\", \"• Genre classification was done using Machine learning (Neural Networks) over MFCC features, and lyrics identification using audio fingerprinting technique.\"]\n}, {\n  \"name\": \"Gender Divide in Data Science - EDA and visualization\",\n  \"link\": \"https://medium.com/datadriveninvestor/exploratory-data-analysis-eda-understanding-the-gender-divide-in-data-science-roles-9faa5da44f5b\",\n  \"pic\": require(\"../resources/projects/gender_ds.jpg\"),\n  \"description\": [\"• Performed Exploratory Data Analysis on Kaggle 2017 and 2018 Data Science Survey Data\", \"• Created six visualizations using ggplot2 to show the divide between men and women in Data Science in terms of involvement and salaries\"]\n}, {\n  \"name\": \"Javascript 30\",\n  \"link\": \"/javascript30\",\n  \"pic\": require(\"../resources/projects/js30.png\"),\n  \"description\": [\"• https://javascript30.com : 30 small projects built using Vanilla JS\", \"• Projects involve image processing using JS, using flex boxes, HTML5 Canvas, etc.\"]\n}, {\n  \"name\": \"NLP - Toxic Comment classification\",\n  \"link\": \"https://towardsdatascience.com/getting-started-with-natural-language-processing-nlp-2c482420cc05\",\n  \"pic\": require(\"../resources/projects/comments.png\"),\n  \"description\": [\"• Performed Data exploration and classified comments as toxic vs non-toxic: https://jovian.ml/aakanksha-ns/toxic-comments\", \"• Explored data using spacy, created wordclouds, used fasttext for classification\"]\n}, {\n  \"name\": \"Computational Creativity -Seminar and Report\",\n  \"link\": require(\"../projects/docs/seminar.pdf\"),\n  \"pic\": require(\"../resources/projects/xos.png\"),\n  \"description\": [\"• Developed a toy operating system on a simulated machine with all basic functionalities: running programs, creation/deletion of files, interrupts etc.\", \"• Implemented multiprogramming by invoking timer interrupts\"]\n}, {\n  \"name\": \"Experimental Operating System\",\n  \"link\": \"https://xosnitc.github.io/\",\n  \"pic\": require(\"../resources/projects/xos.png\"),\n  \"description\": [\"• Developed a toy operating system on a simulated machine with all basic functionalities: running programs, creation/deletion of files, interrupts etc.\", \"• Implemented multiprogramming by invoking timer interrupts\"]\n}, {\n  \"name\": \"Data Mining\",\n  \"link\": require(\"../projects/docs/DM.pdf\"),\n  \"pic\": require(\"../resources/projects/data-mining.png\"),\n  \"description\": [\"• Performed preprocessing and cleaning using OpenRefine, and Data mining using Weka on a large Diabetes dataset and determined the most effective classifier according to Weka.\"]\n}];\nexport const JS30_PROJECTS = [{\n  \"name\": \"Drumkit\",\n  \"link\": \"/js30/drum-kit\",\n  \"pic\": require(\"../resources/js30/drumKit.png\"),\n  \"description\": \"This is a simple application to implement a drum-kit, where you can press specific keys to produce different sounds.\"\n}, {\n  \"name\": \"Analog Clock\",\n  \"link\": \"/js30/analog-clock\",\n  \"pic\": require(\"../resources/js30/clock.png\"),\n  \"description\": \"An anlog clock that shows the current time and has hours, minutes and seconds hand. It uses the CSS rotate method to set the hands to the current time every second.\"\n}, {\n  \"name\": \"Photo Effects\",\n  \"link\": \"/js30/photo-effects\",\n  \"pic\": require(\"../resources/js30/photo-effects.png\"),\n  \"description\": \"A webpage to apply different styles to an image, like changing border color, blurring and changing border width. It uses js to make changes to the cc-styles applied onto the image.\"\n}, {\n  \"name\": \"Multiple Check Boxes\",\n  \"link\": \"/js30/shift-and-check-all\",\n  \"pic\": require(\"../resources/js30/multipleCheckboxes.png\"),\n  \"description\": \"Implements function to check multiple checkboxes on holding Shift key.\"\n}, {\n  \"name\": \"Flexes\",\n  \"link\": \"/js30/flexes\",\n  \"pic\": require(\"../resources/js30/flexes.png\"),\n  \"description\": \"experimenting with flexes. \"\n}, {\n  \"name\": \"Canvas\",\n  \"link\": \"/js30/canvas\",\n  \"pic\": require(\"../resources/js30/canvas.png\"),\n  \"description\": \"experimenting with html5 canvas.\"\n}, {\n  \"name\": \"Type Ahead\",\n  \"link\": \"/js30/Type-ahead\",\n  \"pic\": require(\"../resources/js30/typeAhead.png\"),\n  \"description\": \"displayes names of cities and states that consist of the word typed, the part where the word type is contained is highlighted. It uses 'change'  and 'keyup' events to identify changes in the input value, after which a filter on the city list is done to return valid matches.\"\n}, {\n  \"name\": \"Custom Video Player\",\n  \"link\": \"/js30/Custom-video-player\",\n  \"pic\": require(\"../resources/js30/customPlayer.png\"),\n  \"description\": \"A custom HTML5 Video Player.\"\n}, {\n  \"name\": \"Key Sequence Detection\",\n  \"link\": \"/js30/secretCode\",\n  \"pic\": require(\"../resources/js30/secretCode.png\"),\n  \"description\": \"Type in the secret code to see the magic (aksh)\"\n}, {\n  \"name\": \"Slide in on Scroll\",\n  \"link\": \"/js30/Slide-in-on-scroll\",\n  \"pic\": require(\"../resources/js30/slideScroll.png\"),\n  \"description\": \"Pictures slide in to place on scrolling\"\n}];","map":{"version":3,"sources":["/Users/aakanksha/workspace/code/react/aakanksha_react_homepage/src/resources/list_of_projects.js"],"names":["PROJECTS","require","JS30_PROJECTS"],"mappings":"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","sourcesContent":["export const PROJECTS = [\n    {\n        \"name\": \"Flower Classification WebApp\",\n        \"link\": \"https://flower-classifier-dad75.firebaseapp.com\",\n        \"pic\": require(\"../resources/projects/floclassifier.jpg\"),\n        \"description\": [\"• Built an end-to-end deep learning based web application to identify the type of a flower given its image\", \"• Used fast-ai library to train the model using transfer learning from ResNet-34.\", \"• Created an API using Flask and deployed it on Render.com. Built a React-based frontend and deployed it on Firebase.com\"]\n    },\n    {\n        \"name\": \"Movie Genre Identifier\",\n        \"link\": \"https://towardsdatascience.com/building-a-movie-genre-classifier-using-a-dataset-created-using-google-images-4752f75a1d79\",\n        \"pic\": require(\"../resources/projects/movies.jpg\"),\n        \"description\": [\"• Generated a custom dataset using Google images\", \"• Trained a model to identify the genre (horror, romance, superhero) of a movie by looking at its poster with an accuracy of 80%.\", \"• Performed various experiments on the model to improve accuracy and made observations about them.\"]\n    },\n    {\n        \"name\": \"Box Office Revenue Predictor\",\n        \"link\": \"https://github.com/ShreejayaB/TMDB-Box-Office-Predictions\",\n        \"pic\": require(\"../resources/projects/tmdb.jpg\"),\n        \"description\": [\"• Compared various regression algorithms like Naive Bayes Regressor, Random Forests, Linear Regression etc. using scikit-learn\", \"• Fine tuned the best regressor (Random Forests) using randomized search\", \"• Predicted box office revenue with an R square score of 0.85\"]\n    },\n    {\n        \"name\": \"Predicting Student grades - Statistical Linear Regression\",\n        \"link\": \"https://github.com/aakanksha-ns/linear-regression-student-grades-project\",\n        \"pic\": require(\"../resources/projects/grades.jpg\"),\n        \"description\": [\"• Predicted Student grades based on social and economic factors\", \"• Employed statistical techniques and the statsmodels Python package for featue selection, model diagnosis, and residual analysis\"]\n    },\n    {\n        \"name\": \"Piper - Music Genre Identifier\",\n        \"link\": require(\"../projects/docs/piper.pdf\"),\n        \"pic\": require(\"../resources/projects/piper.png\"),\n        \"description\": [\"• Developed an android application that can recognize the genre  and identify the lyrics of a song played externally or chosen from the device.\", \"• Genre classification was done using Machine learning (Neural Networks) over MFCC features, and lyrics identification using audio fingerprinting technique.\"]\n    },\n    {\n        \"name\": \"Gender Divide in Data Science - EDA and visualization\",\n        \"link\": \"https://medium.com/datadriveninvestor/exploratory-data-analysis-eda-understanding-the-gender-divide-in-data-science-roles-9faa5da44f5b\",\n        \"pic\": require(\"../resources/projects/gender_ds.jpg\"),\n        \"description\": [\"• Performed Exploratory Data Analysis on Kaggle 2017 and 2018 Data Science Survey Data\", \"• Created six visualizations using ggplot2 to show the divide between men and women in Data Science in terms of involvement and salaries\"]\n    },\n    {\n        \"name\": \"Javascript 30\",\n        \"link\": \"/javascript30\",\n        \"pic\": require(\"../resources/projects/js30.png\"),\n        \"description\": [\"• https://javascript30.com : 30 small projects built using Vanilla JS\", \"• Projects involve image processing using JS, using flex boxes, HTML5 Canvas, etc.\"]\n    },\n    {\n        \"name\": \"NLP - Toxic Comment classification\",\n        \"link\": \"https://towardsdatascience.com/getting-started-with-natural-language-processing-nlp-2c482420cc05\",\n        \"pic\": require(\"../resources/projects/comments.png\"),\n        \"description\": [\"• Performed Data exploration and classified comments as toxic vs non-toxic: https://jovian.ml/aakanksha-ns/toxic-comments\", \"• Explored data using spacy, created wordclouds, used fasttext for classification\"]\n    },\n    {\n        \"name\": \"Computational Creativity -Seminar and Report\",\n        \"link\": require(\"../projects/docs/seminar.pdf\"),\n        \"pic\": require(\"../resources/projects/xos.png\"),\n        \"description\": [\"• Developed a toy operating system on a simulated machine with all basic functionalities: running programs, creation/deletion of files, interrupts etc.\", \"• Implemented multiprogramming by invoking timer interrupts\"]\n    },\n    {\n        \"name\": \"Experimental Operating System\",\n        \"link\": \"https://xosnitc.github.io/\",\n        \"pic\": require(\"../resources/projects/xos.png\"),\n        \"description\": [\"• Developed a toy operating system on a simulated machine with all basic functionalities: running programs, creation/deletion of files, interrupts etc.\", \"• Implemented multiprogramming by invoking timer interrupts\"]\n    },\n    {\n        \"name\": \"Data Mining\",\n        \"link\": require(\"../projects/docs/DM.pdf\"),\n        \"pic\": require(\"../resources/projects/data-mining.png\"),\n        \"description\": [\"• Performed preprocessing and cleaning using OpenRefine, and Data mining using Weka on a large Diabetes dataset and determined the most effective classifier according to Weka.\"]\n    }\n\n];\n\nexport const JS30_PROJECTS = [\n    {\n        \"name\": \"Drumkit\",\n        \"link\": \"/js30/drum-kit\",\n        \"pic\": require(\"../resources/js30/drumKit.png\"),\n        \"description\":\n            \"This is a simple application to implement a drum-kit, where you can press specific keys to produce different sounds.\"\n    },\n    {\n        \"name\": \"Analog Clock\",\n        \"link\": \"/js30/analog-clock\",\n        \"pic\": require(\"../resources/js30/clock.png\"),\n        \"description\":\n            \"An anlog clock that shows the current time and has hours, minutes and seconds hand. It uses the CSS rotate method to set the hands to the current time every second.\"\n    },\n    {\n        \"name\": \"Photo Effects\",\n        \"link\": \"/js30/photo-effects\",\n        \"pic\": require(\"../resources/js30/photo-effects.png\"),\n        \"description\":\n            \"A webpage to apply different styles to an image, like changing border color, blurring and changing border width. It uses js to make changes to the cc-styles applied onto the image.\"\n    },\n    {\n        \"name\": \"Multiple Check Boxes\",\n        \"link\": \"/js30/shift-and-check-all\",\n        \"pic\": require(\"../resources/js30/multipleCheckboxes.png\"),\n        \"description\":\n            \"Implements function to check multiple checkboxes on holding Shift key.\"\n    },\n    {\n        \"name\": \"Flexes\",\n        \"link\": \"/js30/flexes\",\n        \"pic\": require(\"../resources/js30/flexes.png\"),\n        \"description\": \"experimenting with flexes. \"\n    },\n    {\n        \"name\": \"Canvas\",\n        \"link\": \"/js30/canvas\",\n        \"pic\": require(\"../resources/js30/canvas.png\"),\n        \"description\": \"experimenting with html5 canvas.\"\n    },\n    {\n        \"name\": \"Type Ahead\",\n        \"link\": \"/js30/Type-ahead\",\n        \"pic\": require(\"../resources/js30/typeAhead.png\"),\n        \"description\":\n            \"displayes names of cities and states that consist of the word typed, the part where the word type is contained is highlighted. It uses 'change'  and 'keyup' events to identify changes in the input value, after which a filter on the city list is done to return valid matches.\"\n    },\n    {\n        \"name\": \"Custom Video Player\",\n        \"link\": \"/js30/Custom-video-player\",\n        \"pic\": require(\"../resources/js30/customPlayer.png\"),\n        \"description\": \"A custom HTML5 Video Player.\"\n    },\n    {\n        \"name\": \"Key Sequence Detection\",\n        \"link\": \"/js30/secretCode\",\n        \"pic\": require(\"../resources/js30/secretCode.png\"),\n        \"description\": \"Type in the secret code to see the magic (aksh)\"\n    },\n    {\n        \"name\": \"Slide in on Scroll\",\n        \"link\": \"/js30/Slide-in-on-scroll\",\n        \"pic\": require(\"../resources/js30/slideScroll.png\"),\n        \"description\": \"Pictures slide in to place on scrolling\"\n    }\n];"]},"metadata":{},"sourceType":"module"}